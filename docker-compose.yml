services:
  postgres:
    image: postgres:15-alpine
    container_name: retroica-postgres
    environment:
      POSTGRES_DB: retroica_store
      POSTGRES_USER: retroica
      POSTGRES_PASSWORD: retroica21
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U retroica -d retroica_store"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: retroica-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build: .
    container_name: retroica-backend
    environment:
      DATABASE_URL: postgres://retroica:retroica21@postgres:5432/retroica_store
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      JWT_SECRET: your-jwt-secret-change-in-production
      COOKIE_SECRET: your-cookie-secret-change-in-production
      CORS_ORIGIN: http://localhost:3000
      MEDUSA_ADMIN_CORS: http://localhost:3000,http://localhost:7001
    ports:
      - "9000:9000"
      - "7001:7001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
    driver: local